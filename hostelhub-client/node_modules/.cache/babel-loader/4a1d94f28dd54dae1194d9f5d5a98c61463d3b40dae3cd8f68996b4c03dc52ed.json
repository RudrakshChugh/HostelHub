{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rudra\\\\hostelhub-client\\\\src\\\\context\\\\AuthProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook for consuming context\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n\n// Provider component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Mock authentication check (replace with real auth logic)\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n      // setUser({ id: 1, name: 'Test User' }); // Uncomment to simulate logged-in user\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n  const value = {\n    user,\n    loading,\n    login: credentials => {\n      // Add your login logic here\n      setUser({\n        id: 1,\n        name: 'Logged In User'\n      });\n    },\n    logout: () => {\n      setUser(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","timer","setTimeout","clearTimeout","value","login","credentials","id","name","logout","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rudra/hostelhub-client/src/context/AuthProvider.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// Create context\r\nexport const AuthContext = createContext();\r\n\r\n// Custom hook for consuming context\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\n// Provider component\r\nexport default function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Mock authentication check (replace with real auth logic)\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setLoading(false);\r\n      // setUser({ id: 1, name: 'Test User' }); // Uncomment to simulate logged-in user\r\n    }, 1000);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login: (credentials) => {\r\n      // Add your login logic here\r\n      setUser({ id: 1, name: 'Logged In User' });\r\n    },\r\n    logout: () => {\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEtE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,SAASO,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,OAAOP,UAAU,CAACK,WAAW,CAAC;AAChC;;AAEA;AAAAE,EAAA,CAJgBD,OAAO;AAKvB,eAAe,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACjD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BF,UAAU,CAAC,KAAK,CAAC;MACjB;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMG,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAG;IACZP,IAAI;IACJE,OAAO;IACPM,KAAK,EAAGC,WAAW,IAAK;MACtB;MACAR,OAAO,CAAC;QAAES,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAiB,CAAC,CAAC;IAC5C,CAAC;IACDC,MAAM,EAAEA,CAAA,KAAM;MACZX,OAAO,CAAC,IAAI,CAAC;IACf;EACF,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACN,KAAK,EAAEA,KAAM;IAAAT,QAAA,EAChCA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAClB,GAAA,CA/BuBF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}